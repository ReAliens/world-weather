// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tests snapshots of components Render Country Details correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div>
      <div
        class="css-gcixap"
      >
        <div
          class="css-j6y61w"
        >
          <div
            class="css-1lekzkb"
          >
            <p
              class="chakra-text css-9j8q24"
            />
            <div
              class="css-cximyj"
            />
          </div>
          <p
            class="chakra-text css-1tapsqs"
          />
        </div>
        <div
          class="css-1cxmdc1"
        >
          <div
            class="css-1kkt86i"
          >
            <p
              class="chakra-text css-19j4nd2"
            >
              currency:  
               
            </p>
            <p
              class="chakra-text css-19j4nd2"
            >
              Lattiude:  
              °
            </p>
            <p
              class="chakra-text css-19j4nd2"
            >
              Longitude:  
              °
            </p>
          </div>
          <div
            class="css-1kkt86i"
          >
            <p
              class="chakra-text css-19j4nd2"
            >
              Native:  
            </p>
            <p
              class="chakra-text css-19j4nd2"
            >
              Region:  
            </p>
            <p
              class="chakra-text css-19j4nd2"
            >
              Iso:  
            </p>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="css-gcixap"
    >
      <div
        class="css-j6y61w"
      >
        <div
          class="css-1lekzkb"
        >
          <p
            class="chakra-text css-9j8q24"
          />
          <div
            class="css-cximyj"
          />
        </div>
        <p
          class="chakra-text css-1tapsqs"
        />
      </div>
      <div
        class="css-1cxmdc1"
      >
        <div
          class="css-1kkt86i"
        >
          <p
            class="chakra-text css-19j4nd2"
          >
            currency:  
             
          </p>
          <p
            class="chakra-text css-19j4nd2"
          >
            Lattiude:  
            °
          </p>
          <p
            class="chakra-text css-19j4nd2"
          >
            Longitude:  
            °
          </p>
        </div>
        <div
          class="css-1kkt86i"
        >
          <p
            class="chakra-text css-19j4nd2"
          >
            Native:  
          </p>
          <p
            class="chakra-text css-19j4nd2"
          >
            Region:  
          </p>
          <p
            class="chakra-text css-19j4nd2"
          >
            Iso:  
          </p>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Tests snapshots of components Render Country card correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div>
      <a
        href="/undefined"
      >
        <div
          class="css-1vh2t2g"
        >
          <div
            class="css-1lekzkb"
          >
            <span
              class="chakra-text css-1kuy7z7"
            />
            <div
              class="css-wkckwx"
            />
          </div>
          <div
            class="css-3uxr30"
          >
            <span
              class="chakra-text css-1qxtz39"
            />
            <span
              class="chakra-text css-whbgep"
            />
            <span
              class="chakra-text css-1qxtz39"
            />
          </div>
        </div>
      </a>
    </div>
  </body>,
  "container": <div>
    <a
      href="/undefined"
    >
      <div
        class="css-1vh2t2g"
      >
        <div
          class="css-1lekzkb"
        >
          <span
            class="chakra-text css-1kuy7z7"
          />
          <div
            class="css-wkckwx"
          />
        </div>
        <div
          class="css-3uxr30"
        >
          <span
            class="chakra-text css-1qxtz39"
          />
          <span
            class="chakra-text css-whbgep"
          />
          <span
            class="chakra-text css-1qxtz39"
          />
        </div>
      </div>
    </a>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Tests snapshots of components Render state card correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div>
      <div
        class="css-1plglf6"
      >
        <p
          class="chakra-text css-0"
        />
        <div
          class="css-gg4vpm"
        >
          <span
            class="chakra-text css-0"
          >
            Latitude: no data
          </span>
          <p
            class="chakra-text css-0"
          >
            longitude:  no data
          </p>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="css-1plglf6"
    >
      <p
        class="chakra-text css-0"
      />
      <div
        class="css-gg4vpm"
      >
        <span
          class="chakra-text css-0"
        >
          Latitude: no data
        </span>
        <p
          class="chakra-text css-0"
        >
          longitude:  no data
        </p>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Tests snapshots of components Render weather Modal correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div />
  </body>,
  "container": <div />,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Tests snapshots of components Renders Header Correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div>
      <div
        class="css-u8tdxk"
      >
        <a
          aria-current="page"
          class="active"
          href="/"
        >
          <svg
            class="chakra-icon css-1qz8ts1"
            focusable="false"
            viewBox="0 0 16.011 26.721"
          >
            <rect
              fill="currentColor"
              height="3.768"
              transform="rotate(45 -11.596 8.57)"
              width="18.875"
            />
            <rect
              fill="currentColor"
              height="3.768"
              transform="rotate(-45 16.111 6.673)"
              width="18.875"
            />
          </svg>
        </a>
        <p
          class="chakra-text css-ydyztb"
        >
          World Weather
        </p>
        <div
          class="css-4c6vfm"
        >
          <svg
            class="chakra-icon css-vesa8u"
            focusable="false"
            viewBox="0 0 45 45"
          >
            <g
              id="Group_4757"
              transform="translate(990 -1706)"
            >
              <g
                fill="#fff"
                id="microphone"
                transform="translate(-975.57 1716.8)"
              >
                <g
                  id="Group_4576"
                  transform="translate(0 11.493)"
                >
                  <g
                    id="Group_4575"
                  >
                    <path
                      class="icon"
                      d="M93.622 210.251a.843.843 0 1 0-1.686 0 5.957 5.957 0 0 1-11.914 0 .843.843 0 1 0-1.686 0 7.642 7.642 0 0 0 6.8 7.615v2.248h-3.063a.843.843 0 1 0 0 1.686h7.812a.843.843 0 1 0 0-1.686h-3.063v-2.248a7.642 7.642 0 0 0 6.8-7.615z"
                      id="Path_4735"
                      transform="translate(-78.336 -209.408)"
                    />
                  </g>
                </g>
                <g
                  id="Group_4578"
                  transform="translate(2.951)"
                >
                  <g
                    id="Group_4577"
                  >
                    <path
                      class="icon"
                      d="M136.789 0a4.7 4.7 0 0 0-4.689 4.693v7.615a4.693 4.693 0 1 0 9.385.028V4.693A4.7 4.7 0 0 0 136.789 0z"
                      id="Path_4736"
                      transform="translate(-132.096)"
                    />
                  </g>
                </g>
              </g>
            </g>
          </svg>
          <svg
            class="chakra-icon css-bsu9a5"
            focusable="false"
            viewBox="0 0 14.917 14.917"
          >
            <path
              class="icon"
              d="M360.654 584.685l-1.168-.149a5.872 5.872 0 0 0-.354-.854l.722-.929a.924.924 0 0 0-.076-1.23l-.979-.979a.927.927 0 0 0-1.234-.079l-.928.722a5.812 5.812 0 0 0-.855-.354l-.149-1.167a.931.931 0 0 0-.924-.821h-1.392a.931.931 0 0 0-.924.819l-.149 1.168a5.74 5.74 0 0 0-.855.354l-.929-.722a.925.925 0 0 0-1.23.076l-.979.978a.927.927 0 0 0-.079 1.234l.722.929a5.782 5.782 0 0 0-.354.854l-1.167.149a.931.931 0 0 0-.821.924V587a.931.931 0 0 0 .819.924l1.168.149a5.841 5.841 0 0 0 .354.854l-.722.929a.924.924 0 0 0 .076 1.23l.979.979a.928.928 0 0 0 1.234.079l.928-.722a5.694 5.694 0 0 0 .854.354l.149 1.166a.931.931 0 0 0 .924.822h1.392a.931.931 0 0 0 .924-.819l.149-1.168a5.864 5.864 0 0 0 .854-.354l.929.721a.923.923 0 0 0 1.23-.076l.979-.979a.926.926 0 0 0 .079-1.234l-.722-.929a5.765 5.765 0 0 0 .354-.854l1.166-.149a.931.931 0 0 0 .821-.924v-1.392a.929.929 0 0 0-.818-.924zm-6.64 4.727a3.108 3.108 0 1 1 3.108-3.108 3.111 3.111 0 0 1-3.108 3.108z"
              fill="#fff"
              transform="translate(-346.555 -578.846)"
            />
          </svg>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="css-u8tdxk"
    >
      <a
        aria-current="page"
        class="active"
        href="/"
      >
        <svg
          class="chakra-icon css-1qz8ts1"
          focusable="false"
          viewBox="0 0 16.011 26.721"
        >
          <rect
            fill="currentColor"
            height="3.768"
            transform="rotate(45 -11.596 8.57)"
            width="18.875"
          />
          <rect
            fill="currentColor"
            height="3.768"
            transform="rotate(-45 16.111 6.673)"
            width="18.875"
          />
        </svg>
      </a>
      <p
        class="chakra-text css-ydyztb"
      >
        World Weather
      </p>
      <div
        class="css-4c6vfm"
      >
        <svg
          class="chakra-icon css-vesa8u"
          focusable="false"
          viewBox="0 0 45 45"
        >
          <g
            id="Group_4757"
            transform="translate(990 -1706)"
          >
            <g
              fill="#fff"
              id="microphone"
              transform="translate(-975.57 1716.8)"
            >
              <g
                id="Group_4576"
                transform="translate(0 11.493)"
              >
                <g
                  id="Group_4575"
                >
                  <path
                    class="icon"
                    d="M93.622 210.251a.843.843 0 1 0-1.686 0 5.957 5.957 0 0 1-11.914 0 .843.843 0 1 0-1.686 0 7.642 7.642 0 0 0 6.8 7.615v2.248h-3.063a.843.843 0 1 0 0 1.686h7.812a.843.843 0 1 0 0-1.686h-3.063v-2.248a7.642 7.642 0 0 0 6.8-7.615z"
                    id="Path_4735"
                    transform="translate(-78.336 -209.408)"
                  />
                </g>
              </g>
              <g
                id="Group_4578"
                transform="translate(2.951)"
              >
                <g
                  id="Group_4577"
                >
                  <path
                    class="icon"
                    d="M136.789 0a4.7 4.7 0 0 0-4.689 4.693v7.615a4.693 4.693 0 1 0 9.385.028V4.693A4.7 4.7 0 0 0 136.789 0z"
                    id="Path_4736"
                    transform="translate(-132.096)"
                  />
                </g>
              </g>
            </g>
          </g>
        </svg>
        <svg
          class="chakra-icon css-bsu9a5"
          focusable="false"
          viewBox="0 0 14.917 14.917"
        >
          <path
            class="icon"
            d="M360.654 584.685l-1.168-.149a5.872 5.872 0 0 0-.354-.854l.722-.929a.924.924 0 0 0-.076-1.23l-.979-.979a.927.927 0 0 0-1.234-.079l-.928.722a5.812 5.812 0 0 0-.855-.354l-.149-1.167a.931.931 0 0 0-.924-.821h-1.392a.931.931 0 0 0-.924.819l-.149 1.168a5.74 5.74 0 0 0-.855.354l-.929-.722a.925.925 0 0 0-1.23.076l-.979.978a.927.927 0 0 0-.079 1.234l.722.929a5.782 5.782 0 0 0-.354.854l-1.167.149a.931.931 0 0 0-.821.924V587a.931.931 0 0 0 .819.924l1.168.149a5.841 5.841 0 0 0 .354.854l-.722.929a.924.924 0 0 0 .076 1.23l.979.979a.928.928 0 0 0 1.234.079l.928-.722a5.694 5.694 0 0 0 .854.354l.149 1.166a.931.931 0 0 0 .924.822h1.392a.931.931 0 0 0 .924-.819l.149-1.168a5.864 5.864 0 0 0 .854-.354l.929.721a.923.923 0 0 0 1.23-.076l.979-.979a.926.926 0 0 0 .079-1.234l-.722-.929a5.765 5.765 0 0 0 .354-.854l1.166-.149a.931.931 0 0 0 .821-.924v-1.392a.929.929 0 0 0-.818-.924zm-6.64 4.727a3.108 3.108 0 1 1 3.108-3.108 3.111 3.111 0 0 1-3.108 3.108z"
            fill="#fff"
            transform="translate(-346.555 -578.846)"
          />
        </svg>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Tests snapshots of components render search correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div>
      <div
        class="css-1d8dx3c"
      >
        <div
          class="chakra-input__group css-4rue55"
        >
          <input
            class="chakra-input css-34s4hw"
            placeholder="Search by country name..."
          />
          <div
            class="chakra-input__right-addon css-ergit7"
          >
            <svg
              class="chakra-icon css-zmpx8u"
              focusable="false"
              viewBox="0 0 17.83 17.842"
            >
              <g>
                <path
                  class="icon"
                  d="M108.768 958.919l-3.786-3.786a7.721 7.721 0 1 0-1.285 1.284l3.786 3.786a.908.908 0 0 0 1.284-1.285zm-14.507-4.774a6.015 6.015 0 0 1 4.656-9.806 6.329 6.329 0 0 1 1.588.206 5.7 5.7 0 0 1 2.076 1.024 6.016 6.016 0 1 1-8.32 8.577z"
                  fill="currentColor"
                  transform="translate(-91.204 -942.627)"
                />
              </g>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="css-1d8dx3c"
    >
      <div
        class="chakra-input__group css-4rue55"
      >
        <input
          class="chakra-input css-34s4hw"
          placeholder="Search by country name..."
        />
        <div
          class="chakra-input__right-addon css-ergit7"
        >
          <svg
            class="chakra-icon css-zmpx8u"
            focusable="false"
            viewBox="0 0 17.83 17.842"
          >
            <g>
              <path
                class="icon"
                d="M108.768 958.919l-3.786-3.786a7.721 7.721 0 1 0-1.285 1.284l3.786 3.786a.908.908 0 0 0 1.284-1.285zm-14.507-4.774a6.015 6.015 0 0 1 4.656-9.806 6.329 6.329 0 0 1 1.588.206 5.7 5.7 0 0 1 2.076 1.024 6.016 6.016 0 1 1-8.32 8.577z"
                fill="currentColor"
                transform="translate(-91.204 -942.627)"
              />
            </g>
          </svg>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
